/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.progex.zoomanagementsoftware.guest;
import com.progex.zoomanagementsoftware.ManagersAndHandlers.GuestModeManager;
import com.progex.zoomanagementsoftware.ManagersAndHandlers.ZooManager;
import com.progex.zoomanagementsoftware.datatypes.FeedingInfo;
import com.progex.zoomanagementsoftware.datatypes.Methods;
import java.awt.Font;
import java.awt.Toolkit;
import java.text.ParseException;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.JOptionPane;

/**
 *
 * @author Oli
 */
public class ChooseAnimalJFrame extends javax.swing.JFrame {

    /**
     * Creates new form TiernamejFrame
     */
    public ChooseAnimalJFrame(JFrame goBackFrame,ZooManager zooManager,String animal,LinkedList<FeedingInfo> feedingInfos) {
        
        initComponents();
        this.animal = animal;
        this.goBackFrame = goBackFrame; 
        this.zooManager = zooManager;
        this.guestModeManager = zooManager.getGuestModeManager();
        myInitComponents();
        viewAnimals(feedingInfos);
        
        
        
    }

     private void myInitComponents(){
        
            setUndecorated(true);
            setAlwaysOnTop(true);
            setResizable(false);
            setVisible(true);
            Toolkit tk = Toolkit.getDefaultToolkit();
            int x =(int)tk.getScreenSize().getWidth();
            int y =(int)tk.getScreenSize().getHeight();
            setSize(x,y);
            //resolution
            if(x == 1920 && y == 1080){
                
                jLabelAnimal.setFont(new java.awt.Font("Calibri", 1, 60));
                jTableAninmalData.setFont(new java.awt.Font("Calibri", 1, 30));
                jLabelShowDateTime.setFont(new java.awt.Font("Calibri", 0, 28));
                
                
            }
            if(x == 1280 && y == 720){
                
                
                jLabelAnimal.setFont(new java.awt.Font("Calibri", 1, 48));
                jTableAninmalData.setFont(new java.awt.Font("Calibri", 1, 26));
                jLabelShowDateTime.setFont(new java.awt.Font("Calibri", 0, 22));
            }
            //Table change Font
            JTableHeader tableHeader = jTableAninmalData.getTableHeader();
            Font headerFont = new Font("Calibri", 0, 22);
            tableHeader.setFont(headerFont);
            jTableAninmalData.setRowHeight(40);
            
            //Date Method
            methods = new Methods();
            methods.showTimeAndDate(jLabelShowDateTime);
            this.setExtendedState(JFrame.MAXIMIZED_BOTH);
            
            //label init
            jLabelAnimal.setText(animal);
            
            //If there arent available feedingTimes
            
            
            
            
            
        
    }
     
    /* Load all relevant Data in the model*/ 
    private void viewAnimals(LinkedList<FeedingInfo> feedingInfos) {
        
        
            DefaultTableModel model = (DefaultTableModel)jTableAninmalData.getModel();
            
            Object[] row = new Object[5];
            
            
            for (FeedingInfo feedingInfo : feedingInfos){
                //Hier bekommt man die Spalten der Zeile
                row[0] = feedingInfo.getCompundName();
                System.out.println(row[0]);
                row[1] = feedingInfo.getStartFeedingTime();
                System.out.println(row[1]);
                row[2] = feedingInfo.getEndFeedingTime();
                System.out.println(row[2]);
                row[3] = feedingInfo.getFoodName();
                System.out.println(row[3]);
                model.addRow(row);

            }
    
    } 
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPaneAnimalTable = new javax.swing.JScrollPane();
        jTableAninmalData = new javax.swing.JTable();
        jLabelAnimal = new javax.swing.JLabel();
        jLabelShowDateTime = new javax.swing.JLabel();
        jButtonBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPaneAnimalTable.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jTableAninmalData.setAutoCreateRowSorter(true);
        jTableAninmalData.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jTableAninmalData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Gehege", "Start", "Ende", "Futter"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableAninmalData.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTableAninmalData.getTableHeader().setReorderingAllowed(false);
        jScrollPaneAnimalTable.setViewportView(jTableAninmalData);

        jLabelAnimal.setFont(new java.awt.Font("Calibri", 1, 48)); // NOI18N
        jLabelAnimal.setText("Tiername");

        jLabelShowDateTime.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabelShowDateTime.setText("TIME");

        jButtonBack.setText("Zur√ºck");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(450, 450, 450)
                        .addComponent(jScrollPaneAnimalTable, javax.swing.GroupLayout.PREFERRED_SIZE, 1016, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(429, 429, 429))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelShowDateTime)
                        .addGap(21, 21, 21))))
            .addGroup(layout.createSequentialGroup()
                .addGap(800, 800, 800)
                .addComponent(jLabelAnimal)
                .addGap(800, 800, 800))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabelShowDateTime))
                    .addComponent(jButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelAnimal)
                .addGap(72, 72, 72)
                .addComponent(jScrollPaneAnimalTable, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed

        // TODO add your handling code here:
        goBackFrame.setVisible(true);
        //Close frame
        this.dispose();
        
        
    }//GEN-LAST:event_jButtonBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChooseAnimalJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChooseAnimalJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChooseAnimalJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChooseAnimalJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        String url ="jdbc:mysql://localhost/";
         String username = "root";
         String password = "0000";
         String dbName = "zoo";
        
         ZooManager zooManager = new ZooManager(url,dbName,username,password);

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChooseAnimalJFrame(null,zooManager,null,null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBack;
    private javax.swing.JLabel jLabelAnimal;
    private javax.swing.JLabel jLabelShowDateTime;
    private javax.swing.JScrollPane jScrollPaneAnimalTable;
    private javax.swing.JTable jTableAninmalData;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JFrame goBackFrame;
    private ZooManager zooManager;
    private GuestModeManager guestModeManager;
    private Methods methods;
    private String animal;
    
    
}
